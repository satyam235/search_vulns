#!/usr/bin/env python3

import os
import sys
import unittest

SEARCH_VULNS_PATH = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
sys.path.insert(1, SEARCH_VULNS_PATH)
import search_vulns


class TestSearches(unittest.TestCase):

    def test_search_wp_572(self):
        self.maxDiff = None
        query = "cpe:2.3:a:wordpress:wordpress:5.7.2:*:*:*:*:*:*:*"
        result = search_vulns.search_vulns(query=query, is_product_id_query=True)
        expected_exploits = [
            "https://www.exploit-db.com/exploits/50663",
            "http://packetstormsecurity.com/files/165540/WordPress-Core-5.8.2-SQL-Injection.html",
            "https://github.com/0x4E0x650x6F/Wordpress-cve-CVE-2022-21661",
            "https://github.com/safe3s/CVE-2022-21661",
            "https://github.com/WellingtonEspindula/SSI-CVE-2022-21661",
            "https://github.com/daniel616/CVE-2022-21661-Demo",
            "https://github.com/purple-WL/wordpress-CVE-2022-21661",
            "https://github.com/sealldeveloper/CVE-2022-21661-PoC",
            "https://github.com/z92g/CVE-2022-21661",
            "https://www.exploit-db.com/exploits/38936",
            "http://www.securityfocus.com/bid/64587",
            "https://vavkamil.cz/2021/11/25/wordpress-plugin-confusion-update-can-get-you-pwned/",
            "http://plugins.trac.wordpress.org/changeset/490070/my-calendar",
            "http://plugins.trac.wordpress.org/changeset/435356/scormcloud",
            "https://blog.sonarsource.com/wordpress-object-injection-vulnerability/",
            "http://plugins.trac.wordpress.org/changeset?old_path=%2Fbad-behavior&old=543807&new_path=%2Fbad-behavior&new=543807",
            "https://blog.sonarsource.com/wordpress-core-unauthenticated-blind-ssrf/",
            "https://wpscan.com/blog/email-leak-oracle-vulnerability-addressed-in-wordpress-6-3-2/",
            "https://patchstack.com/articles/wordpress-core-6-3-2-security-update-technical-advisory?_s_id=cve",
            "https://github.com/guestzz/CVE-2022-21661",
            "https://github.com/pog007/CVE-2023-5561-PoC",
            "https://github.com/p4ncontomat3/CVE-2022-21661",
            "https://github.com/CharonDefalt/WordPress--CVE-2022-21661",
            "https://github.com/michael-david-fry/CVE-2023-22622",
            "https://github.com/huynhvanphuc/CVE-2022-3590-WordPress-Vulnerability-Scanner",
            "https://github.com/Abdurahmon3236/-CVE-2024-31211",
            "https://github.com/kittypurrnaz/cve-2022-21661",
            "https://github.com/w0r1i0g1ht/CVE-2022-21661",
            "https://github.com/hxlxmj/CVE-2022-3590-WordPress-Vulnerability-Scanner",
            "https://github.com/rootxsushant/CVE-2023-5561-POC-Updated",
            "https://www.exploit-db.com/exploits/52274",
            "https://github.com/Fauzan-Aldi/CVE-2022-21661",
            "https://github.com/dthkhang/CVE-2023-5561-PoC",
            "https://github.com/yohannslm/CVE-2025-54352",
            "https://www.vicarius.io/vsociety/posts/understanding-the-wordpress-sql-injection-vulnerability-cve-2022-21661",
        ]
        result_exploits = []
        for vuln in result["vulns"].values():
            for exploit in vuln.exploits:
                result_exploits.append(exploit)
        self.assertEqual(set(expected_exploits), set(result_exploits))

    def test_search_apache_2425(self):
        self.maxDiff = None
        query = "cpe:2.3:a:apache:http_server:2.4.25:*:*:*:*:*:*:*"
        result = search_vulns.search_vulns(query=query, is_product_id_query=True)
        expected_exploits = [
            "https://blog.fuzzing-project.org/60-Optionsbleed-HTTP-OPTIONS-method-can-leak-Apaches-server-memory.html",
            "https://blog.fuzzing-project.org/uploads/apache-2.2-optionsbleed-backport.patch",
            "https://github.com/hannob/optionsbleed",
            "https://github.com/brokensound77/OptionsBleed-POC-Scanner",
            "https://github.com/l0n3rs/CVE-2017-9798",
            "https://github.com/nitrado/CVE-2017-9798",
            "https://github.com/pabloec20/optionsbleed",
            "http://packetstormsecurity.com/files/152441/CARPE-DIEM-Apache-2.4.x-Local-Privilege-Escalation.html",
            "https://github.com/ozkanbilge/Apache-Exploit-2019",
            "https://www.exploit-db.com/exploits/19244",
            "https://www.exploit-db.com/exploits/47689",
            "https://github.com/dja2TaqkGEEfA45/CVE-2021-26691",
            "https://github.com/dja2TaqkGEEfA45/CVE-2021-26690",
            "https://github.com/dhmosfunk/CVE-2023-25690-POC",
            "https://github.com/tbachvarova/linux-apache-fix-mod_rewrite-spaceInURL",
            "https://www.exploit-db.com/exploits/29739",
            "https://www.exploit-db.com/exploits/19253",
            "https://portswigger.net/research/http2",
            "http://packetstormsecurity.com/files/160393/Apache-2-HTTP2-Module-Concurrent-Pool-Usage.html",
            "https://httpd.apache.org/security/vulnerabilities_24.html",
            "https://github.com/whisp1830/CVE-2017-15715",
            "https://github.com/BabyTeam1024/CVE-2021-40438",
            "https://github.com/Kashkovsky/CVE-2021-40438",
            "https://github.com/ericmann/apache-cve-poc",
            "https://github.com/gassara-kys/CVE-2021-40438",
            "https://github.com/pisut4152/Sigma-Rule-for-CVE-2021-40438-exploitation-attempt",
            "https://github.com/sixpacksecurity/CVE-2021-40438",
            "https://github.com/xiaojiangxl/CVE-2021-40438",
            "https://www.exploit-db.com/exploits/47688",
            "https://github.com/DrunkenShells/Disclosures/tree/master/CVE-2019-10092-Limited%20Cross-Site%20Scripting%20in%20mod_proxy%20Error%20Page-Apache%20httpd",
            "https://github.com/motikan2010/CVE-2019-10092_Docker",
            "https://github.com/gottburgm/Exploits/tree/master/CVE-2017-7679",
            "https://github.com/snknritr/CVE-2017-7679-in-python",
            "https://www.exploit-db.com/exploits/51193",
            "https://github.com/Benasin/CVE-2022-22720",
            "https://github.com/nuPacaChi/-CVE-2021-44790",
            "https://github.com/thanhlam-attt/CVE-2023-25690",
            "https://github.com/sergiovks/CVE-2021-40438-Apache-2.4.48-SSRF-exploit",
            "https://github.com/watchtowrlabs/ibm-qradar-ajp_smuggling_CVE-2022-26377_poc",
            "https://github.com/Cappricio-Securities/CVE-2021-40438",
            "https://github.com/mbadanoiu/CVE-2019-10092",
            "https://github.com/aeyesec/CVE-2024-27316_poc",
            "https://github.com/lockness-Ko/CVE-2024-27316",
            "http://packetstormsecurity.com/files/152415/Slackware-Security-Advisory-httpd-Updates.html",
            "https://github.com/Abdurahmon3236/CVE-2024-38473",
            "https://github.com/juanschallibaum/CVE-2024-38473-Nuclei-Template",
            "https://github.com/p0in7s/CVE-2024-38475",
            "https://github.com/Abdurahmon3236/CVE-2024-38472",
            "https://github.com/mrmtwoj/apache-vulnerability-testing",
            "https://github.com/savsch/PoC_CVE-2019-0217",
            "https://github.com/7own/CVE-2021-26690---Apache-mod_session",
            "https://github.com/soltanali0/CVE-2024-38475",
            "https://github.com/r1az4r/CVE-2006-20001",
            "https://github.com/danielduan2002/CVE-2021-26690",
            "https://github.com/yakir2b/check-point-gateways-rce",
            "http://packetstormsecurity.com/files/171631/Apache-2.4.x-Buffer-Overflow.html",
            "https://github.com/syaifulandy/CVE-2024-38475",
            "https://www.exploit-db.com/exploits/42745",
            "https://github.com/dodiorne/cve-2022-31813",
            "https://www.exploit-db.com/exploits/46676",
            "https://github.com/oOCyginXOo/CVE-2023-25690-POC",
            "https://github.com/ForceEA001/CVE-2024-40898-SSL-Bypass-Detection",
            "https://github.com/anilpatel199n/CVE-2024-40898",
            "https://github.com/abrewer251/CVE-2024-38475_SonicBoom_Apache_URL_Traversal_PoC",
        ]
        result_exploits = []
        for vuln in result["vulns"].values():
            for exploit in vuln.exploits:
                result_exploits.append(exploit)
        self.assertEqual(set(expected_exploits), set(result_exploits))

    def test_search_proftpd_133c(self):
        self.maxDiff = None
        query = "cpe:2.3:a:proftpd:proftpd:1.3.3:c:*:*:*:*:*:*"
        result = search_vulns.search_vulns(query=query, is_product_id_query=True)
        expected_exploits = [
            "https://www.exploit-db.com/exploits/16129",
            "http://www.exploit-db.com/exploits/16129/",
            "http://www.securityfocus.com/bid/46183",
            "https://bugzilla.redhat.com/show_bug.cgi?id=681718",
            "http://bugs.proftpd.org/show_bug.cgi?id=3711",
            "http://bugs.proftpd.org/show_bug.cgi?id=3536",
            "https://bugzilla.redhat.com/show_bug.cgi?id=670170",
            "https://github.com/proftpd/proftpd/issues/846",
            "https://github.com/proftpd/proftpd/issues/1284",
            "http://bugs.proftpd.org/show_bug.cgi?id=4372",
            "https://github.com/KTN1990/CVE-2019-12815",
            "https://github.com/lcartey/proftpd-cve-2019-12815",
            "https://github.com/proftpd/proftpd/issues/1683",
            "https://www.terrapin-attack.com",
            "https://github.com/proftpd/proftpd/issues/1683#issuecomment-1712887554",
            "https://github.com/TrixSec/CVE-2023-48795",
            "https://www.vicarius.io/vsociety/posts/cve-2023-48795-mitigate-openssh-vulnerability",
            "https://www.vicarius.io/vsociety/posts/cve-2023-48795-detect-openssh-vulnerabilit",
            "https://github.com/Dr0xharakiri/CVE-2023-48795",
        ]
        result_exploits = []
        for vuln in result["vulns"].values():
            for exploit in vuln.exploits:
                result_exploits.append(exploit)
        self.assertEqual(set(expected_exploits), set(result_exploits))

    def test_search_redis_323(self):
        self.maxDiff = None
        query = "cpe:2.3:a:redis:redis:3.2.3:*:*:*:*:*:*:*"
        result = search_vulns.search_vulns(query=query, is_product_id_query=True)
        expected_exploits = [
            "https://github.com/convisolabs/CVE-2022-24834",
            "https://github.com/redis/redis/pull/10651",
            "https://github.com/redis/redis/issues/8712",
            "https://github.com/redis/redis/commit/0bf90d944313919eb8e63d3588bf63a367f020a3",
            "http://packetstormsecurity.com/files/166885/Redis-Lua-Sandbox-Escape.html",
            "https://github.com/JacobEbben/CVE-2022-0543",
            "https://github.com/SiennaSkies/redisHack",
            "https://github.com/z92g/CVE-2022-0543",
            "https://github.com/redis/redis/pull/10651",
            "https://github.com/0x7eTeam/CVE-2022-0543",
            "https://github.com/DukeSec97/CVE-2022-24834-",
            "https://github.com/publicqi/CVE-2024-46981",
            "https://github.com/xsshk/CVE-2024-46981",
            "https://github.com/daeseong1209/CVE-2024-31449",
            "https://github.com/B1ack4sh/Blackash-CVE-2025-32023",
            "https://github.com/leesh3288/CVE-2025-32023",
            "https://github.com/LordBheem/CVE-2025-32023",
        ]
        result_exploits = []
        for vuln in result["vulns"].values():
            for exploit in vuln.exploits:
                result_exploits.append(exploit)
        self.assertEqual(set(expected_exploits), set(result_exploits))

    def test_search_piwik_045(self):
        self.maxDiff = None
        query = "cpe:2.3:a:piwik:piwik:0.4.5:*:*:*:*:*:*:*"
        result = search_vulns.search_vulns(query=query)
        expected_exploits = [
            "http://karmainsecurity.com/KIS-2015-09",
            "http://packetstormsecurity.com/files/134219/Piwik-2.14.3-Local-File-Inclusion.html",
            "http://seclists.org/fulldisclosure/2015/Nov/14",
            "http://karmainsecurity.com/KIS-2015-10",
            "http://packetstormsecurity.com/files/134220/Piwik-2.14.3-PHP-Object-Injection.html",
            "http://seclists.org/fulldisclosure/2015/Nov/15",
            "https://www.exploit-db.com/exploits/33814",
        ]
        result_exploits = []
        for vuln in result["vulns"].values():
            for exploit in vuln.exploits:
                result_exploits.append(exploit)
        self.assertEqual(set(expected_exploits), set(result_exploits))

    def test_search_hitachi_replication_manager_86500(self):
        self.maxDiff = None
        query = "cpe:2.3:a:hitachi:replication_manager:8.6.5-00:*:*:*:*:*:*:*"
        result = search_vulns.search_vulns(query=query, is_product_id_query=True)
        expected_exploits = []
        result_exploits = []
        for vuln in result["vulns"].values():
            for exploit in vuln.exploits:
                result_exploits.append(exploit)
        self.assertEqual(set(expected_exploits), set(result_exploits))

    def test_search_ghsa_only(self):
        self.maxDiff = None
        query = "GHSA-6c3j-c64m-qhgq"
        result = search_vulns.search_vulns(query=query)
        expected_exploits = [
            "https://snyk.io/vuln/SNYK-JS-JQUERY-174006",
            "https://github.com/DanielRuf/snyk-js-jquery-174006",
            "https://github.com/DanielRuf/snyk-js-jquery-565129",
            "https://github.com/Snorlyd/https-nj.gov---CVE-2019-11358",
            "https://github.com/bitnesswise/jquery-prototype-pollution-fix",
            "https://github.com/chrisneagu/FTC-Skystone-Dark-Angels-Romania-2020",
            "https://github.com/isacaya/CVE-2019-11358",
            "https://www.exploit-db.com/exploits/52141",
        ]
        result_exploits = []
        for vuln in result["vulns"].values():
            for exploit in vuln.exploits:
                result_exploits.append(exploit)
        self.assertEqual(set(expected_exploits), set(result_exploits))


if __name__ == "__main__":
    unittest.main()
