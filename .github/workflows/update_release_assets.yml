name: Update release assets
on:
  schedule:
    - cron: "15 4 * * *"
  workflow_dispatch:
jobs:
  build-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout search_vulns code
        uses: actions/checkout@v4
      - name: Set up Python and Pip
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
          python-version: '3.10'
      - name: Upgrade Pip
        run: python3 -m pip install --upgrade pip
      - name: Install tool
        run: ./install.sh --no-resources
      - name: Build product and vulnerability databases
        id: build
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
          VULNCHECK_API_KEY: ${{ secrets.VULNCHECK_API_KEY }}
        run: |
          ARTIFACTS_JSON=$(./search_vulns.py --full-update -a | tail -n 1)
          echo "artifacts=$ARTIFACTS_JSON" >> "$GITHUB_OUTPUT"
      - name: Test everything is working
        run: python3 ./search_vulns.py -q 'jquery 2.1.3' | grep 'CVE-2020-11022'
      # Do not perform actual tests here, since they become outdated rather quickly
      # - name: Test CVE Completeness
      #   run: python3 ./tests/test_cve_completeness.py
      # - name: Test CVE Attribute Completeness
      #   run: python3 ./tests/test_cve_attr_completeness.py
      # - name: Test Exploit Completeness
      #   run: python3 ./tests/test_exploit_completeness.py
      # - name: Test Version Comparison Correctness
      #   run: python3 ./tests/test_version_comparison.py
      # - name: Test endoflife.date Correctness
      #   run: python3 ./tests/test_eol_date.py
      # - name: Test GHSA Correctness
      #   run: python3 ./tests/test_ghsa_completeness.py
      # - name: Test Vuln ID Search Correctness
      #   run: python3 ./tests/test_vuln_id_search.py
      - name: Collect dynamic artifact files
        run: |
          mkdir -p release-artifacts
          files=$(echo '${{ steps.build.outputs.artifacts }}' | jq -r '.[]')
          for f in $files; do
            if [ -f "$f" ]; then
              ln -s "$f" release-artifacts/
            else
              echo "Warning: file '$f' does not exist"
            fi
          done
      - name: Get latest release tag
        run: |
          LATEST_TAG=$(curl -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/ra1nb0rn/search_vulns/releases/latest | jq -r '.tag_name')
          echo "LATEST_RELEASE_TAG=$LATEST_TAG" >> $GITHUB_ENV
      - name: Update resource files of latest release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.LATEST_RELEASE_TAG }}
          files: |
            resources/productdb.db3
            resources/vulndb.db3
            release-artifacts/**
